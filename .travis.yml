language: cpp
sudo: false
dist: bionic

notifications:
  slack:
    secure: 1jnJfgRwfuF8dzfN5daTItQ+jrilhRSjz88gKMhMpqvWrpaAZrytTcejs5FELXadeLIiddoT7c5GKLrCngVzadMi60bc/kfE2Lzer8z31i6mfPXGLvd3zWpVa6Tt8Bur2wL/oB/f6herDQurW2t0HcTp6oc6Mv3iI23PPl/MQG4w6oNKc6SOeBIBDykJOSaf3+SY/z4vXBqqF5lbmWHUIngTUkV7UEzmj+c4MukOUn9IyYjNSgvZd1ql4SKG58gzkafB1tbhxPjyJqLcWjokwlhVYTxHulBqemxRj7DGznWAUL72Pbc6ot27R655wvl/OEoL7X8U0aLIJIlIzLl49WDv5c81wGw/iOVjj5leBpfJl6QlyNMJC0jPEEJYPbEWxzgZGNa1eYbZyroOKvBBalcYVzxq018VgwYjMdZL0zFhdTymgFcDnR1p3Z1Lii6fN3oO2QVAsyBq3sN+IVtlyAWnHIGP+eyEGpggKJ1GsnG/Mb8cjBc6hjG8Q3fRQEfB5C5FeWJSU67hTnuGpTWKcF8rcfbtrw5D1JzBkqYjL6PuG5/VLu8Ro/IihBKf0N+sFa5GvdmbWOEWDEpiIMfWvcOpTIabZyRzcLJX7fqP29b2lUjoLVT3g5+cgSYSZcVyCFj+kunL1LZpgsBf9tr6r+OWzXwNVti+fEvF0KqMHHs=

env:
  global:
    - LC_ALL="en_US.UTF-8"
    - LANG="en_US.UTF-8"
    - LANGUAGE="en_US.UTF-8"
    - PYTHONIOENCODING=UTF-8
    - OMP_NUM_THREADS=2
    - CMAKE_VERSION="3.12.4"
    # Invalidate PYENV_ROOT
    - PYENV_ROOT=$HOME/fuffa

cache:
  pip: true
  directories:
    - $HOME/Deps/cmake/$CMAKE_VERSION
    - $HOME/Deps/eigen

jobs:
  include:
    - addons: &1
        apt:
          packages:
            - g++
            - lcov
            - libpython3.5-dev
            - python3.5-dev
      env:
        - BUILD_TYPE='release'
        - CXX_COMPILER='g++'
        - EIGEN_VER='3.3.4'
    - addons: *1
      env:
        - BUILD_TYPE='release'
        - CXX_COMPILER='g++'
        - OPENMP='--omp'
        - EIGEN_VER='3.3.4'
    - addons: *1
      env:
        - BUILD_TYPE='debug'
        - CXX_COMPILER='g++'
        - COVERAGE='--coverage'
        - EIGEN_VER='3.3.4'
    - addons:
        apt:
          packages:
            - clang
            - libpython3.5-dev
            - python3.5-dev
      env:
        - BUILD_TYPE='release'
        - CXX_COMPILER='clang++'
        - EIGEN_VER='3.3.4'
    - stage: Danger Bot
      ruby: 2.5.3
      addons:
        apt:
          packages:
            - clang-format
      if: commit_message !~ /(skip bot|bot skip|skip danger|danger skip)/
      script:
        - |
          bundle install --gemfile=.ci/Gemfile
          BUNDLE_GEMFILE=.ci/Gemfile bundle exec danger --dangerfile=.ci/Dangerfile

before_install:
  # Dependencies are downloaded in $HOME/Downloads and installed in $HOME/Deps
  - mkdir -p $HOME/Downloads $HOME/Deps

install:
  - ./.ci/cmake.sh
  - export PATH=$HOME/Deps/cmake/$CMAKE_VERSION/bin${PATH:+:$PATH}
  - ./.ci/eigen.sh
  - pip install --user pipenv --upgrade
  - pipenv install --python="/usr/bin/python3.5"

before_script:
  - test -n $CC && unset CC
  - test -n $CXX && unset CXX
  - test -n $FC && unset FC
  - source $(pipenv --venv)/bin/activate

script:
  - ./.ci/report_versions.sh
  - |
    python ./setup \
        --type=${BUILD_TYPE} \
        --cxx=${CXX_COMPILER} \
        --enable-examples \
        --cmake-options="-DEigen3_DIR=${HOME}/Deps/eigen/share/eigen3/cmake/ -DPYTHON_EXECUTABLE=$(type -P python)" \
        ${COVERAGE} \
        ${OPENMP} \
        build
  - cd build
  - cmake --build . -- VERBOSE=1 -j2
  - ctest --output-on-failure --verbose

after_success:
  - |
    if [[ "${COVERAGE}" = "--coverage" ]]; then
      cd ${TRAVIS_BUILD_DIR}
      lcov --version
      lcov --directory . --capture --output-file coverage.info
      lcov --remove coverage.info '/usr/*' --output-file coverage.info
      lcov --remove coverage.info 'external/*' --output-file coverage.info
      lcov --remove coverage.info 'tests/*' --output-file coverage.info
      lcov --list coverage.info
      bash <(curl -s https://codecov.io/bash) -X gcov || echo "Codecov did not collect coverage reports"
    fi
